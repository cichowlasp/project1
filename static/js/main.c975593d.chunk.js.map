{"version":3,"sources":["components/Home/components/Steps/StepOne.tsx","components/Home/components/Steps/StepTwo.tsx","components/Context/ColorsProvider.tsx","components/Context/DarkModeProvider.tsx","consts/colors.tsx","components/Home/components/OwnersInput/OwnersInput.tsx","components/Home/components/Steps/StepThree.tsx","components/Home/components/Multiform/Multiform.tsx","components/Home/Home.tsx","components/Feed/components/CarInfo/CarInfo.tsx","components/Feed/Feed.tsx","components/SidebarContent/SidebarContent.tsx","components/Router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StepOne","register","control","getValues","watch","setValue","errors","validation","TextField","label","error","brand","style","color","helperText","defaultValue","required","minLength","maxLength","onChange","event","target","value","shouldValidate","model","name","render","field","autoOk","variant","format","disableFuture","InputAdornmentProps","position","newDate","StepTwo","vehicleOperation","pattern","min","max","rules","fuelType","select","inputProps","MenuItem","gearbox","cubicCapacity","ColorsContext","React","createContext","ColorsProvider","children","useState","primary","localStorage","getItem","secondary","colors","setColors","Provider","changeColors","which","setItem","ThemeContext","DarkModeProvider","JSON","parse","darkMode","setDarkMode","toggleDarkMode","stringify","prevState","DarkMode","WhiteMode","GreyColor","Container","styled","div","StyledTextField","Wrapper","Owners","Item","OwnersInput","key","owners","setOwners","owner","setOwner","useContext","Button","disabled","trim","length","onClick","tempOwners","map","index","className","filter","el","remove","StepThree","FormControlLabel","Checkbox","checked","condition","Form","form","FieldsContainer","ButtonsContainer","Message","Multiform","step","setStep","open","setOpen","message","setMessage","setValidation","useForm","handleSubmit","reset","formState","changeStep","action","preventDefault","prevStep","onSubmit","data","savedData","saveData","returnStep","type","Snackbar","autoHideDuration","onClose","reason","Home","setTitle","useEffect","useStyles","makeStyles","theme","createStyles","accordion","marginBottom","width","background","CardTitle","CarInformation","CarInfo","car","classes","Accordion","elevation","AccordionSummary","expandIcon","htmlColor","aria-controls","id","AccordionDetails","moment","productionDate","accidentFree","servicedASS","join","Feed","fetchedData","search","setSearch","toLowerCase","includes","replace","SidebarContentStyle","css","StyledLink","Link","StyledDiv","StyledPaper","Paper","SidebarContent","setColor","anchorEl","setAnchorEl","Boolean","to","currentTarget","handleClick","Popover","anchorOrigin","vertical","horizontal","transformOrigin","hex","Sidebar","TitleContainer","Title","Search","input","Content","Router","title","text","setText","placeholder","filterData","exact","path","AppStyle","App","appliedTheme","createMuiTheme","palette","main","ThemeProvider","utils","MomentUtils","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c975593d.chunk.js","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { Controller } from 'react-hook-form';\nimport {\n\tUseFormRegister,\n\tFieldValues,\n\tControl,\n\tUseFormGetValues,\n\tUseFormWatch,\n\tUseFormSetValue,\n\tDeepMap,\n\tFieldError,\n} from 'react-hook-form';\n\ninterface FuncProps {\n\tregister: UseFormRegister<FieldValues>;\n\tcontrol: Control<FieldValues>;\n\tgetValues: UseFormGetValues<FieldValues>;\n\twatch: UseFormWatch<FieldValues>;\n\tsetValue: UseFormSetValue<FieldValues>;\n\terrors: DeepMap<FieldValues, FieldError>;\n\tvalidation: boolean;\n}\n\nconst StepOne: React.FC<FuncProps> = ({\n\tregister,\n\tcontrol,\n\tgetValues,\n\twatch,\n\tsetValue,\n\terrors,\n\tvalidation,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<TextField\n\t\t\t\tlabel='Brand'\n\t\t\t\terror={errors.brand}\n\t\t\t\tkey={'brand'}\n\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\thelperText={\n\t\t\t\t\terrors.brand\n\t\t\t\t\t\t? 'This field is required(min 3 letters and max 20)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\tdefaultValue={getValues('brand')}\n\t\t\t\t{...register('brand', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 3,\n\t\t\t\t\tmaxLength: 20,\n\t\t\t\t})}\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('brand', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tkey={'model'}\n\t\t\t\tdefaultValue={getValues('model')}\n\t\t\t\terror={errors.model}\n\t\t\t\tlabel='Model'\n\t\t\t\thelperText={\n\t\t\t\t\terrors.model\n\t\t\t\t\t\t? 'This field is required(min 3 letters and max 20)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\t{...register('model', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 3,\n\t\t\t\t\tmaxLength: 20,\n\t\t\t\t})}\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('model', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<Controller\n\t\t\t\tname='productionDate'\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\tautoOk\n\t\t\t\t\t\tvariant='inline'\n\t\t\t\t\t\tlabel='Production Date'\n\t\t\t\t\t\tformat='DD/MM/yyyy'\n\t\t\t\t\t\tvalue={watch('productionDate')}\n\t\t\t\t\t\tdisableFuture\n\t\t\t\t\t\tInputAdornmentProps={{ position: 'start' }}\n\t\t\t\t\t\tonChange={(newDate) => {\n\t\t\t\t\t\t\tsetValue('productionDate', newDate);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default StepOne;\n","import React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport { Controller } from 'react-hook-form';\nimport {\n\tUseFormRegister,\n\tFieldValues,\n\tControl,\n\tUseFormGetValues,\n\tUseFormSetValue,\n\tDeepMap,\n\tFieldError,\n} from 'react-hook-form';\n\ninterface FuncProps {\n\tregister: UseFormRegister<FieldValues>;\n\tcontrol: Control<FieldValues>;\n\tgetValues: UseFormGetValues<FieldValues>;\n\tsetValue: UseFormSetValue<FieldValues>;\n\terrors: DeepMap<FieldValues, FieldError>;\n\tvalidation: boolean;\n}\n\nconst StepTwo: React.FC<FuncProps> = ({\n\tregister,\n\tcontrol,\n\tgetValues,\n\terrors,\n\tsetValue,\n\tvalidation,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<TextField\n\t\t\t\tkey={'vehicleOperation'}\n\t\t\t\terror={errors.vehicleOperation}\n\t\t\t\thelperText={\n\t\t\t\t\terrors.vehicleOperation\n\t\t\t\t\t\t? 'This field is required(provide an number form 1 to 1000000)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\tdefaultValue={getValues('vehicleOperation')}\n\t\t\t\t{...register('vehicleOperation', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tpattern: /^[0-9]*$/i,\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: 1000000,\n\t\t\t\t})}\n\t\t\t\tlabel='Vehicle operation(km)'\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('vehicleOperation', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<Controller\n\t\t\t\tname='fuelType'\n\t\t\t\tcontrol={control}\n\t\t\t\trules={{ required: true }}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel='Type of fuel'\n\t\t\t\t\t\tdefaultValue={getValues('fuelType')}\n\t\t\t\t\t\terror={errors.fuelType}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\terrors.fuelType ? 'This field is required' : ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselect\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'Fuel type',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<MenuItem value={'disel'}>Disel</MenuItem>\n\t\t\t\t\t\t<MenuItem value={'petrol'}>Petrol</MenuItem>\n\t\t\t\t\t\t<MenuItem value={'petrol+gas'}>Petrol+gas</MenuItem>\n\t\t\t\t\t</TextField>\n\t\t\t\t)}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname='gearbox'\n\t\t\t\tcontrol={control}\n\t\t\t\trules={{ required: true }}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tselect\n\t\t\t\t\t\terror={errors.gearbox}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\terrors.gearbox ? 'This field is required' : ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefaultValue={getValues('gearbox')}\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\tlabel='Gearbox'\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'Fuel type',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<MenuItem key={'manual'} value={'manual'}>\n\t\t\t\t\t\t\tManual\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem value={'automat'} key={'automat'}>\n\t\t\t\t\t\t\tAutomatic\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</TextField>\n\t\t\t\t)}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tkey={'cubicCapacity'}\n\t\t\t\tlabel='Cubic capacity (cm3)'\n\t\t\t\terror={errors.cubicCapacity}\n\t\t\t\thelperText={\n\t\t\t\t\terrors.cubicCapacity\n\t\t\t\t\t\t? 'This field is required(provide an number from 500 to 10000)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\tdefaultValue={getValues('cubicCapacity')}\n\t\t\t\t{...register('cubicCapacity', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tpattern: /^[0-9]*$/i,\n\t\t\t\t\tmin: 500,\n\t\t\t\t\tmax: 10000,\n\t\t\t\t})}\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('cubicCapacity', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default StepTwo;\n","import React, { useState } from 'react';\ntype colors = {\n\tcolors: {\n\t\tprimary: string;\n\t\tsecondary: string;\n\t};\n\tchangeColors: (color: string, which: string) => void;\n};\n\nexport const ColorsContext = React.createContext<colors>({} as colors);\n\nexport const ColorsProvider: React.FC = ({ children }) => {\n\tconst [colors, setColors] = useState({\n\t\tprimary: localStorage.getItem('primary') || '#F47373',\n\t\tsecondary: localStorage.getItem('secondary') || '#ba68c8',\n\t});\n\tconst changeColors = (color: string, which: string) => {\n\t\tif (which === 'primary') {\n\t\t\tlocalStorage.setItem('primary', color);\n\t\t\tsetColors({ ...colors, primary: color });\n\t\t} else if (which === 'secondary') {\n\t\t\tlocalStorage.setItem('secondary', color);\n\t\t\tsetColors({ ...colors, secondary: color });\n\t\t}\n\t};\n\n\treturn (\n\t\t<ColorsContext.Provider value={{ colors, changeColors }}>\n\t\t\t{children}\n\t\t</ColorsContext.Provider>\n\t);\n};\n","import React, { useState } from 'react';\ntype DarkMode = { darkMode: Boolean; toggleDarkMode: () => void };\n\nexport const ThemeContext = React.createContext<DarkMode>({} as DarkMode);\n\nexport const DarkModeProvider: React.FC = ({ children }) => {\n\tconst [darkMode, setDarkMode] = useState(\n\t\tJSON.parse(localStorage.getItem('darkMode') || 'false')\n\t);\n\tconst toggleDarkMode = () => {\n\t\tlocalStorage.setItem('darkMode', JSON.stringify(!darkMode));\n\t\tsetDarkMode((prevState: boolean) => !prevState);\n\t};\n\n\treturn (\n\t\t<ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n\t\t\t{children}\n\t\t</ThemeContext.Provider>\n\t);\n};\n","export const DarkMode = 'black';\nexport const WhiteMode = 'white';\nexport const GreyColor = 'grey';\nexport const BackgroundColor = 'rgba(188, 188, 188, 0.3)';\n","import React, { useState, useContext } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport {\n\tFieldValues,\n\tUseFormSetValue,\n\tUseFormRegister,\n\tUseFormGetValues,\n} from 'react-hook-form';\nimport { ThemeContext } from '../../../Context/Context';\nimport { DarkMode, WhiteMode } from '../../../../consts/colors';\n\ninterface FuncProps {\n\tlabel: string;\n\terror: boolean;\n\tkey: string;\n\tstyle: {\n\t\tcolor: string;\n\t};\n\thelperText: string;\n\tsetValue: UseFormSetValue<FieldValues>;\n\tvalidation: boolean;\n\tregister: UseFormRegister<FieldValues>;\n\tgetValues: UseFormGetValues<FieldValues>;\n}\n\nconst OwnersInput: React.FC<FuncProps> = ({\n\tlabel,\n\terror,\n\tkey,\n\tstyle,\n\thelperText,\n\tvalidation,\n\tsetValue,\n\tregister,\n\tgetValues,\n}) => {\n\tconst [owners, setOwners] = useState<string[]>(getValues('owners') || []);\n\tconst [owner, setOwner] = useState(getValues('owner') || '');\n\tconst { darkMode } = useContext(ThemeContext);\n\tconst handleClick = () => {\n\t\tconst tempOwners = [...owners, owner];\n\t\tsetOwners(tempOwners);\n\t\tsetValue('owners', tempOwners);\n\t\tsetOwner('');\n\t\tsetValue('owner', '');\n\t};\n\n\tconst remove = (index: number) => {\n\t\tconst tempOwners = owners.filter((el) => el !== owners[index]);\n\t\tsetOwners(tempOwners);\n\t\tsetValue('owners', tempOwners);\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Wrapper>\n\t\t\t\t<StyledTextField\n\t\t\t\t\tlabel={label}\n\t\t\t\t\terror={error}\n\t\t\t\t\tkey={key}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\thelperText={helperText}\n\t\t\t\t\tvalue={owner}\n\t\t\t\t\tdefaultValue={owner}\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetOwner(event.target.value);\n\t\t\t\t\t\tsetValue('owner', event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={owner.trim().length < 3 || error}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={handleClick}>\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t</Wrapper>\n\t\t\t<Owners darkMode={darkMode}>\n\t\t\t\tOwners:\n\t\t\t\t{owners.map((name, index) => (\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<div className='name'>{name}</div>\n\t\t\t\t\t\t<div className='remove' onClick={() => remove(index)}>\n\t\t\t\t\t\t\tx\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Item>\n\t\t\t\t))}{' '}\n\t\t\t</Owners>\n\t\t</Container>\n\t);\n};\n\ninterface darkMode {\n\tdarkMode: Boolean;\n}\n\nconst Container = styled.div`\n\twidth: 100%;\n`;\nconst StyledTextField = styled(TextField)`\n\twidth: 90%;\n`;\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\nconst Owners = styled.div<darkMode>`\n\tdisplay: flex;\n\theight: 10vh;\n\twidth: 100%;\n\talign-items: center;\n\tcolor: ${({ darkMode }) => (darkMode ? WhiteMode : DarkMode)};\n\toverflow: scroll; /* Show horizontal scrollbar */\n`;\n\nconst Item = styled.div`\n\tdisplay: flex;\n\tbackground-color: #bbbbbb;\n\tmargin-left: 5px;\n\tpadding: 5px;\n\t.name {\n\t\tmargin: 0 0.5vw;\n\t}\n\tborder-radius: 10px;\n\n\t.remove {\n\t\ttext-align: center;\n\t\tfont-size: 13px;\n\t\tfont-weight: bold;\n\t\twidth: 17px;\n\t\theight: 17px;\n\t\tbackground-color: red;\n\t\tborder-radius: 100%;\n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n`;\n\nexport default OwnersInput;\n","import React, { useContext } from 'react';\nimport {\n\tTextField,\n\tFormControlLabel,\n\tCheckbox,\n\tMenuItem,\n} from '@material-ui/core';\nimport { Controller } from 'react-hook-form';\nimport { ThemeContext } from '../../../Context/Context';\nimport {\n\tUseFormRegister,\n\tFieldValues,\n\tControl,\n\tUseFormGetValues,\n\tUseFormSetValue,\n\tDeepMap,\n\tFieldError,\n} from 'react-hook-form';\nimport OwnersInput from '../OwnersInput/OwnersInput';\n\ninterface FuncProps {\n\tregister: UseFormRegister<FieldValues>;\n\tcontrol: Control<FieldValues>;\n\tgetValues: UseFormGetValues<FieldValues>;\n\tsetValue: UseFormSetValue<FieldValues>;\n\terrors: DeepMap<FieldValues, FieldError>;\n\tvalidation: boolean;\n}\n\nconst StepThree: React.FC<FuncProps> = ({\n\tregister,\n\tcontrol,\n\tgetValues,\n\terrors,\n\tsetValue,\n\tvalidation,\n}) => {\n\tconst { darkMode } = useContext(ThemeContext);\n\treturn (\n\t\t<>\n\t\t\t<Controller\n\t\t\t\tname='accidentFree'\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={getValues('accidentFree')}\n\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\tname='Accident-free'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: darkMode ? 'white' : 'black',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tAccident-free\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname='servicedASS'\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={getValues('servicedASS')}\n\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\tname='Serviced at an authorized service station'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: darkMode ? 'white' : 'black',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tServiced at an ASS\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname='condition'\n\t\t\t\tcontrol={control}\n\t\t\t\trules={{ required: true }}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tselect\n\t\t\t\t\t\terror={errors.condition}\n\t\t\t\t\t\tdefaultValue={getValues('condition')}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\terrors.condition\n\t\t\t\t\t\t\t\t? 'This field is required(please select a option)'\n\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\tlabel='condition'\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'Fuel type',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<MenuItem key={'new'} value={'new'}>\n\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem value={'used'} key={'used'}>\n\t\t\t\t\t\t\tUsed\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</TextField>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tkey={'color'}\n\t\t\t\tdefaultValue={getValues('color')}\n\t\t\t\terror={errors.color}\n\t\t\t\tlabel='Color'\n\t\t\t\t{...register('color', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 1,\n\t\t\t\t\tmaxLength: 20,\n\t\t\t\t})}\n\t\t\t\thelperText={errors.color ? 'This field is required' : ''}\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('color', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<OwnersInput\n\t\t\t\tlabel='Owner name'\n\t\t\t\terror={errors.owner}\n\t\t\t\tkey={'owners'}\n\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\thelperText={\n\t\t\t\t\terrors.owner\n\t\t\t\t\t\t? 'This field is required(min 3 letters and max 20)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\tsetValue={setValue}\n\t\t\t\tvalidation={validation}\n\t\t\t\tregister={register}\n\t\t\t\tgetValues={getValues}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default StepThree;\n","import React, { useState, MouseEvent } from 'react';\nimport { Button, Snackbar } from '@material-ui/core';\nimport { Moment } from 'moment';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport StepOne from '../Steps/StepOne';\nimport StepTwo from '../Steps/StepTwo';\nimport StepThree from '../Steps/StepThree';\n\ninterface data {\n\tbrand: string;\n\tmodel: string;\n\tproductionDate: Moment;\n\tvehicleOperation: number;\n\tfuelType: string;\n\tgearbox: string;\n\tcubicCapacity: number;\n\taccidentFree: boolean;\n\tservicedASS: boolean;\n\tcolor: string;\n\tcondition: string;\n}\n\nconst Multiform: React.FC = () => {\n\tconst [step, setStep] = useState(1);\n\tconst [open, setOpen] = useState(false);\n\tconst [message, setMessage] = useState('');\n\tconst [validation, setValidation] = useState(false);\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tcontrol,\n\t\tgetValues,\n\t\twatch,\n\t\tsetValue,\n\t\treset,\n\t\tformState: { errors },\n\t} = useForm();\n\n\tconst returnStep = () => {\n\t\tswitch (step) {\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<StepOne\n\t\t\t\t\t\tregister={register}\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tgetValues={getValues}\n\t\t\t\t\t\twatch={watch}\n\t\t\t\t\t\tsetValue={setValue}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tvalidation={validation}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<StepTwo\n\t\t\t\t\t\tregister={register}\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tgetValues={getValues}\n\t\t\t\t\t\tsetValue={setValue}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tvalidation={validation}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 3:\n\t\t\t\treturn (\n\t\t\t\t\t<StepThree\n\t\t\t\t\t\tregister={register}\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tgetValues={getValues}\n\t\t\t\t\t\tsetValue={setValue}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tvalidation={validation}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t}\n\t};\n\tconst changeStep = (event: MouseEvent, action?: String) => {\n\t\tevent.preventDefault();\n\t\tsetStep((prevStep) => (action === '+' ? ++prevStep : --prevStep));\n\t};\n\n\tconst saveData = (data: data) => {\n\t\tconst savedData = JSON.parse(localStorage.getItem('data') || '[]');\n\t\tlocalStorage.setItem('data', JSON.stringify([...savedData, data]));\n\t};\n\tconst onSubmit = (data: data) => {\n\t\tsetValidation(false);\n\t\tsetMessage('');\n\t\tsaveData(data);\n\t\treset();\n\t\tsetStep(1);\n\t\tsetOpen(true);\n\t};\n\tconst onError = () => {\n\t\tsetValidation(true);\n\t\tsetMessage('Please check all the fields to correct errors');\n\t};\n\n\tconst handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t<FieldsContainer>{returnStep()}</FieldsContainer>\n\t\t\t<ButtonsContainer>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={(event) => changeStep(event)}\n\t\t\t\t\tdisabled={step === 1 ? true : false}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='secondary'>\n\t\t\t\t\tBack\n\t\t\t\t</Button>\n\t\t\t\t{step !== 3 ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={(event) => changeStep(event, '+')}\n\t\t\t\t\t\tdisabled={step === 3 ? true : false}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t) : (\n\t\t\t\t\t<Button type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</ButtonsContainer>\n\t\t\t<Message>{message}</Message>\n\t\t\t<Snackbar\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmessage='Car added sucesfully'\n\t\t\t/>\n\t\t</Form>\n\t);\n};\n\nconst Form = styled.form`\n\tdisplay: flex;\n\twidth: 50vw;\n\tflex-direction: column;\n\tjustify-content: space-evenly;\n`;\n\nconst FieldsContainer = styled.div`\n\theight: 50vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n`;\n\nconst ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n`;\n\nconst Message = styled.div`\n\theight: 20px;\n\tcolor: red;\n`;\nexport default Multiform;\n","import React, { useEffect } from 'react';\nimport Multiform from './components/Multiform/Multiform';\n\ninterface FuncProps {\n\tsetTitle(arg: string): void;\n}\n\nconst Home: React.FC<FuncProps> = ({ setTitle }) => {\n\tuseEffect(() => {\n\t\tsetTitle('Add Car');\n\t}, [setTitle]);\n\treturn <Multiform />;\n};\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport {\n\tAccordion,\n\tAccordionSummary,\n\tAccordionDetails,\n\tTheme,\n\tcreateStyles,\n\tmakeStyles,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport moment, { Moment } from 'moment';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { ThemeContext } from '../../../Context/Context';\nimport { DarkMode } from '../../../../consts/colors';\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\taccordion: {\n\t\t\tmarginBottom: '25px',\n\t\t\twidth: '100%',\n\t\t\tbackground: 'rgb(232, 232, 232)',\n\t\t},\n\t})\n);\n\ninterface FuncProps {\n\tcar: {\n\t\taccidentFree: boolean;\n\t\tbrand: string;\n\t\tcolor: string;\n\t\tcondition: string;\n\t\tcubicCapacity: number;\n\t\tfuelType: string;\n\t\tgearbox: string;\n\t\tmodel: string;\n\t\tproductionDate: Moment;\n\t\tservicedASS: boolean;\n\t\tvehicleOperation: number;\n\t\towners: string[];\n\t};\n}\nconst CarInfo: React.FC<FuncProps> = ({ car }) => {\n\tconst { darkMode } = useContext(ThemeContext);\n\tconst classes = useStyles();\n\treturn (\n\t\t<Accordion elevation={3} className={classes.accordion}>\n\t\t\t<AccordionSummary\n\t\t\t\texpandIcon={<ExpandMoreIcon htmlColor='black' />}\n\t\t\t\taria-controls='panel1a-content'\n\t\t\t\tid='panel1a-header'>\n\t\t\t\t<CardTitle\n\t\t\t\t\tdarkMode={\n\t\t\t\t\t\tdarkMode\n\t\t\t\t\t}>{`${car.brand} ${car.model}`}</CardTitle>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<CarInformation darkMode={darkMode}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tPrduction Date:{' '}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{moment(car.productionDate).format('MMMM Do YYYY')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tVehicle operation: <span>{car.vehicleOperation}km</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tFuel type: <span>{car.fuelType}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tGearbox: <span>{car.gearbox}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tCubic capacity: <span>{car.cubicCapacity}cm3</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tAccident free:{' '}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{car.accidentFree ? (\n\t\t\t\t\t\t\t\t<CheckBoxIcon />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<CheckBoxOutlineBlankIcon />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tServiced at an authorized service station:{' '}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{car.servicedASS ? (\n\t\t\t\t\t\t\t\t<CheckBoxIcon />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<CheckBoxOutlineBlankIcon />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tCondition: <span>{car.condition}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tColor: <span>{car.color}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tOwners:{' '}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{car?.owners?.length\n\t\t\t\t\t\t\t\t? car.owners.join(', ')\n\t\t\t\t\t\t\t\t: 'no informations'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</CarInformation>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n\ninterface darkMode {\n\tdarkMode: Boolean;\n}\n\nconst CardTitle = styled.div<darkMode>`\n\tfont-weight: bold;\n\twidth: 100%;\n\tpadding: 10px;\n\tfont-size: 2rem;\n\t${({ darkMode }) => (darkMode ? `color: ${DarkMode};` : '')}\n\t@media (max-width: 630px) {\n\t\tfont-size: 1rem;\n\t}\n`;\n\nconst CarInformation = styled.div<darkMode>`\n\twidth: 100%;\n\ttext-align: left;\n\tpadding-left: 20px;\n\tdiv {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\theight: 40px;\n\t\talign-content: center;\n\t\talign-items: center;\n\t\tspan {\n\t\t\tfont-weight: bold;\n\t\t\tmargin-left: 10px;\n\t\t\ttext-transform: uppercase;\n\t\t}\n\t}\n\t@media (max-width: 630px) {\n\t\tpadding-left: 0;\n\t\tdiv {\n\t\t\tfont-size: 0.65rem;\n\t\t\tdisplay: flex;\n\t\t\twidth: 100%;\n\t\t\theight: 45px;\n\t\t\talign-content: center;\n\t\t\talign-items: center;\n\t\t\tspan {\n\t\t\t\tfont-weight: bold;\n\t\t\t\ttext-transform: lowercase;\n\t\t\t}\n\t\t}\n\t}\n\t${({ darkMode }) => (darkMode ? `color: ${DarkMode};` : '')}\n`;\n\nexport default CarInfo;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport CarInfo from './components/CarInfo/CarInfo';\nimport { Moment } from 'moment';\n\ninterface data {\n\tbrand: string;\n\tmodel: string;\n\tproductionDate: Moment;\n\tvehicleOperation: number;\n\tfuelType: string;\n\tgearbox: string;\n\tcubicCapacity: number;\n\taccidentFree: boolean;\n\tservicedASS: boolean;\n\tcolor: string;\n\tcondition: string;\n\towners: string[];\n}\n\ninterface FuncProps {\n\tsetTitle(arg: string): void;\n\tfetchedData: data[];\n\tsearch: string;\n\tsetSearch(arg: string): void;\n}\n\nconst Feed: React.FC<FuncProps> = ({\n\tsetTitle,\n\tfetchedData,\n\tsearch,\n\tsetSearch,\n}) => {\n\tuseEffect(() => {\n\t\tsetTitle('Collection');\n\t\tsetSearch('');\n\t}, [setTitle, setSearch]);\n\n\tconst filterData = () => {\n\t\treturn (\n\t\t\tfetchedData\n\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t.filter((car: data) => {\n\t\t\t\t\tif (search === '') {\n\t\t\t\t\t\treturn car;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcar.brand\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(search.toLowerCase()) ||\n\t\t\t\t\t\tcar.model\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(search.toLowerCase()) ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tcar.brand.replace(/\\s/g, '') +\n\t\t\t\t\t\t\tcar.model.replace(/\\s/g, '')\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(search.toLowerCase()) ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tcar.model.replace(/\\s/g, '') +\n\t\t\t\t\t\t\tcar.brand.replace(/\\s/g, '')\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(search.toLowerCase().replace(/\\s/g, ''))\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn car;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t{filterData().map((car: data) => {\n\t\t\t\treturn <CarInfo car={car} />;\n\t\t\t})}\n\t\t</Container>\n\t);\n};\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tpadding: 5vh;\n\twidth: 40%;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n\talign-items: center;\n\t@media (max-width: 630px) {\n\t\twidth: 60%;\n\t}\n`;\n\nexport default Feed;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Popover, Paper, Button } from '@material-ui/core';\nimport { BlockPicker } from 'react-color';\nimport styled, { css } from 'styled-components';\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ThemeContext, ColorsContext } from '../Context/Context';\nimport { BackgroundColor, DarkMode, WhiteMode } from '../../consts/colors';\n\nconst SidebarContent: React.FC = () => {\n\tconst { changeColors } = useContext(ColorsContext);\n\tconst [color, setColor] = useState('#F47373');\n\tconst [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null);\n\tconst { darkMode, toggleDarkMode } = useContext(ThemeContext);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst open = Boolean(anchorEl);\n\n\treturn (\n\t\t<div>\n\t\t\t<StyledLink darkMode={darkMode} to='/'>\n\t\t\t\t<div className='text'>Add Car</div>\n\t\t\t\t<AddIcon className='icon' />\n\t\t\t</StyledLink>\n\t\t\t<StyledLink darkMode={darkMode} to='/feed'>\n\t\t\t\t<div className='text'>Collection</div>\n\t\t\t\t<FormatListBulletedIcon className='icon' />\n\t\t\t</StyledLink>\n\t\t\t<StyledDiv onClick={toggleDarkMode} darkMode={darkMode}>\n\t\t\t\t{darkMode ? <BrightnessHighIcon /> : <Brightness4Icon />}\n\t\t\t</StyledDiv>\n\t\t\t<StyledDiv\n\t\t\t\tonClick={(event) => handleClick(event)}\n\t\t\t\tdarkMode={darkMode}>\n\t\t\t\t<PaletteIcon />\n\t\t\t</StyledDiv>\n\t\t\t<Popover\n\t\t\t\topen={open}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\thorizontal: 'center',\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'center',\n\t\t\t\t}}>\n\t\t\t\t<StyledPaper>\n\t\t\t\t\t<BlockPicker\n\t\t\t\t\t\tonChange={(color) => setColor(color.hex)}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\twidth={'200px'}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonsContainer>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tonClick={() => changeColors(color, 'secondary')}>\n\t\t\t\t\t\t\tSet Secondary\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tonClick={() => changeColors(color, 'primary')}>\n\t\t\t\t\t\t\tSet primary\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonsContainer>\n\t\t\t\t</StyledPaper>\n\t\t\t</Popover>\n\t\t</div>\n\t);\n};\n\ninterface darkMode {\n\tdarkMode: Boolean;\n}\n\nconst SidebarContentStyle = css<darkMode>`\n\tdisplay: flex;\n\tjustify-content: center;\n\tpadding: 1rem;\n\ttext-decoration: none;\n\ttext-transform: uppercase;\n\tcolor: ${DarkMode};\n\tfont-weight: 500;\n\tmargin: 0.5rem;\n\tborder-radius: 10px;\n\tborder: 2px solid ${DarkMode};\n\theight: 20px;\n\n\t&:hover {\n\t\tbackground-color: ${BackgroundColor};\n\t\tborder-radius: 10px;\n\t\tcursor: pointer;\n\t}\n\t.icon {\n\t\tdisplay: none;\n\t}\n\t${({ darkMode }) =>\n\t\tdarkMode\n\t\t\t? `color: ${WhiteMode};\n\t\tborder-color: ${WhiteMode};`\n\t\t\t: ''}\n\t@media (max-width: 831px) {\n\t\t.icon {\n\t\t\tdisplay: block;\n\t\t}\n\t\t.text {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n`;\nconst StyledLink = styled(Link)<darkMode>`\n\t${SidebarContentStyle}\n`;\nconst StyledDiv = styled.div<darkMode>`\n\t${SidebarContentStyle}\n`;\n\nconst StyledPaper = styled(Paper)`\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n`;\n\nconst ButtonsContainer = styled.div`\n\tdisplay: flex;\n\theight: 80px;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tpadding: 10px;\n`;\n\nexport default SidebarContent;\n","import React, { useState, useContext } from 'react';\nimport { HashRouter as BrowserRouter, Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Home from '../Home/Home';\nimport Feed from '../Feed/Feed';\nimport SidebarContent from '../SidebarContent/SidebarContent';\nimport { ThemeContext } from '../Context/Context';\nimport { DarkMode, WhiteMode, GreyColor } from '../../consts/colors';\n\nconst Router: React.FC = () => {\n\tconst fetchedData = JSON.parse(localStorage.getItem('data') || '[]');\n\tconst [title, setTitle] = useState('Add Car');\n\tconst [text, setText] = useState('');\n\tconst { darkMode } = useContext(ThemeContext);\n\n\tconst filterData = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetText(event.target.value.trim().replace(/\\s/g, ''));\n\t};\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Container>\n\t\t\t\t<Sidebar darkMode={darkMode}>\n\t\t\t\t\t<SidebarContent />\n\t\t\t\t</Sidebar>\n\t\t\t\t<TitleContainer>\n\t\t\t\t\t<Title darkMode={darkMode}>\n\t\t\t\t\t\t{title === 'Collection' ? (\n\t\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\t\tplaceholder='Search'\n\t\t\t\t\t\t\t\tdarkMode={darkMode}\n\t\t\t\t\t\t\t\tonChange={(event) => filterData(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Content darkMode={darkMode}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t\t<Home setTitle={setTitle} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path='/feed'>\n\t\t\t\t\t\t\t\t<Feed\n\t\t\t\t\t\t\t\t\tfetchedData={fetchedData}\n\t\t\t\t\t\t\t\t\tsearch={text}\n\t\t\t\t\t\t\t\t\tsetSearch={setText}\n\t\t\t\t\t\t\t\t\tsetTitle={setTitle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Content>\n\t\t\t\t</TitleContainer>\n\t\t\t</Container>\n\t\t</BrowserRouter>\n\t);\n};\n\ninterface darkMode {\n\tdarkMode: Boolean;\n}\n\nconst Container = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tbackground-color: rgb(29, 28, 28);\n`;\n\nconst Sidebar = styled.div<darkMode>`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\twidth: 15%;\n\tmax-height: 100%;\n\tbackground-color: ${({ darkMode }) => (darkMode ? DarkMode : WhiteMode)};\n\tmargin: 1rem 0 1rem 1rem;\n\tborder-radius: 10px;\n\tbox-shadow: 0 0 1em ${GreyColor};\n\t&.dark {\n\t\tbackground-color: $dark-mode;\n\t}\n`;\n\nconst TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100%;\n\twidth: 100%;\n\ttext-align: center;\n`;\n\nconst Title = styled.div<darkMode>`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\tbackground-color: ${WhiteMode};\n\tmargin: 1rem;\n\tmax-height: 8vh;\n\tmin-height: 8vh;\n\tmax-width: 100%;\n\ttext-transform: uppercase;\n\tborder-radius: 10px;\n\tbox-shadow: 0 0 1em ${GreyColor};\n\t${({ darkMode }) =>\n\t\tdarkMode\n\t\t\t? `\n                background-color: ${DarkMode};\n                color: ${WhiteMode};`\n\t\t\t: ''}\n`;\n\nconst Search = styled.input<darkMode>`\n\twidth: 90%;\n\theight: 90%;\n\tborder: none;\n\ttext-align: center;\n\tborder-radius: 10px;\n\tbox-shadow: none;\n\tfont-size: 40px;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t${({ darkMode }) =>\n\t\tdarkMode\n\t\t\t? `\n                background-color: ${DarkMode};\n                color: ${WhiteMode};`\n\t\t\t: ''}\n`;\n\nconst Content = styled.div<darkMode>`\n\tdisplay: flex;\n\tbackground-color: ${({ darkMode }) => (darkMode ? DarkMode : WhiteMode)};\n\tmargin: 1rem 0 1rem 1rem;\n\tmargin: 0 1rem 1rem 1rem;\n\toverflow: auto;\n\tjustify-content: center;\n\tborder-radius: 10px;\n\tbox-shadow: 0 0 1em ${GreyColor};\n\theight: 100vh;\n`;\n\nexport default Router;\n","import React, { useContext } from 'react';\nimport Router from './components/Router/Router';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport styled from 'styled-components';\nimport { ThemeContext, ColorsContext } from './components/Context/Context';\n\nconst App = () => {\n\tconst { darkMode } = useContext(ThemeContext);\n\tconst { colors } = useContext(ColorsContext);\n\tconst appliedTheme = createMuiTheme({\n\t\tpalette: {\n\t\t\ttype: darkMode ? 'dark' : 'light',\n\t\t\tprimary: {\n\t\t\t\tmain: colors.primary,\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\tmain: colors.secondary,\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<ThemeProvider theme={appliedTheme}>\n\t\t\t<AppStyle className='App'>\n\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\n\t\t\t\t\t<Router />\n\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t</AppStyle>\n\t\t</ThemeProvider>\n\t);\n};\n\nconst AppStyle = styled.div`\n\theight: 100vh;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\nimport { DarkModeProvider, ColorsProvider } from './components/Context/Context';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<DarkModeProvider>\n\t\t\t<ColorsProvider>\n\t\t\t\t<App />\n\t\t\t</ColorsProvider>\n\t\t</DarkModeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}