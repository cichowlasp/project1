{"version":3,"sources":["components/Home/components/Steps/StepOne.tsx","components/Home/components/Steps/StepTwo.tsx","components/Context/ColorsProvider.tsx","components/Context/DarkModeProvider.tsx","components/Home/components/Steps/StepThree.tsx","components/Home/components/Multiform/Multiform.tsx","components/Home/Home.tsx","components/Feed/components/CarInfo/CarInfo.tsx","components/Feed/Feed.tsx","components/SidebarContent/SidebarContent.tsx","components/Router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StepOne","register","control","getValues","watch","setValue","errors","validation","TextField","label","error","brand","style","color","helperText","defaultValue","required","minLength","maxLength","onChange","event","target","value","shouldValidate","model","name","render","field","autoOk","variant","format","disableFuture","InputAdornmentProps","position","newDate","StepTwo","vehicleOperation","pattern","min","max","rules","fuelType","select","inputProps","MenuItem","gearbox","cubicCapacity","ColorsContext","React","createContext","ColorsProvider","children","useState","primary","localStorage","getItem","secondary","colors","setColors","Provider","changeColors","which","setItem","ThemeContext","DarkModeProvider","JSON","parse","darkMode","setDarkMode","toggleDarkMode","stringify","prevState","StepThree","useContext","FormControlLabel","Checkbox","checked","condition","Multiform","step","setStep","open","setOpen","message","setMessage","setValidation","useForm","handleSubmit","reset","formState","changeStep","action","preventDefault","prevStep","className","onSubmit","data","savedData","saveData","returnStep","Button","onClick","disabled","type","Snackbar","autoHideDuration","onClose","reason","Home","setTitle","useEffect","useStyles","makeStyles","theme","createStyles","accordion","marginBottom","width","background","CarInfo","car","classes","Accordion","elevation","AccordionSummary","expandIcon","htmlColor","aria-controls","id","AccordionDetails","moment","productionDate","accidentFree","servicedASS","Feed","fetchedData","search","setSearch","filter","toLowerCase","includes","replace","map","SidebarContent","setColor","anchorEl","setAnchorEl","Boolean","to","role","currentTarget","handleClick","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Paper","hex","Router","title","text","setText","placeholder","trim","filterData","exact","path","App","appliedTheme","createMuiTheme","palette","main","ThemeProvider","utils","MomentUtils","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ba1539a.chunk.js","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { Controller } from 'react-hook-form';\nimport {\n\tUseFormRegister,\n\tFieldValues,\n\tControl,\n\tUseFormGetValues,\n\tUseFormWatch,\n\tUseFormSetValue,\n\tDeepMap,\n\tFieldError,\n} from 'react-hook-form';\n\ninterface FuncProps {\n\tregister: UseFormRegister<FieldValues>;\n\tcontrol: Control<FieldValues>;\n\tgetValues: UseFormGetValues<FieldValues>;\n\twatch: UseFormWatch<FieldValues>;\n\tsetValue: UseFormSetValue<FieldValues>;\n\terrors: DeepMap<FieldValues, FieldError>;\n\tvalidation: boolean;\n}\n\nconst StepOne: React.FC<FuncProps> = ({\n\tregister,\n\tcontrol,\n\tgetValues,\n\twatch,\n\tsetValue,\n\terrors,\n\tvalidation,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<TextField\n\t\t\t\tlabel='Brand'\n\t\t\t\terror={errors.brand}\n\t\t\t\tkey={'brand'}\n\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\thelperText={\n\t\t\t\t\terrors.brand\n\t\t\t\t\t\t? 'This field is required(min 3 letters and max 20)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\tdefaultValue={getValues('brand')}\n\t\t\t\t{...register('brand', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 3,\n\t\t\t\t\tmaxLength: 20,\n\t\t\t\t})}\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('brand', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tkey={'model'}\n\t\t\t\tdefaultValue={getValues('model')}\n\t\t\t\terror={errors.model}\n\t\t\t\tlabel='Model'\n\t\t\t\thelperText={\n\t\t\t\t\terrors.model\n\t\t\t\t\t\t? 'This field is required(min 3 letters and max 20)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\t{...register('model', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 3,\n\t\t\t\t\tmaxLength: 20,\n\t\t\t\t})}\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('model', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<Controller\n\t\t\t\tname='productionDate'\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\tautoOk\n\t\t\t\t\t\tvariant='inline'\n\t\t\t\t\t\tlabel='Production Date'\n\t\t\t\t\t\tformat='DD/MM/yyyy'\n\t\t\t\t\t\tvalue={watch('productionDate')}\n\t\t\t\t\t\tdisableFuture\n\t\t\t\t\t\tInputAdornmentProps={{ position: 'start' }}\n\t\t\t\t\t\tonChange={(newDate) => {\n\t\t\t\t\t\t\tsetValue('productionDate', newDate);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default StepOne;\n","import React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport { Controller } from 'react-hook-form';\nimport {\n\tUseFormRegister,\n\tFieldValues,\n\tControl,\n\tUseFormGetValues,\n\tUseFormSetValue,\n\tDeepMap,\n\tFieldError,\n} from 'react-hook-form';\n\ninterface FuncProps {\n\tregister: UseFormRegister<FieldValues>;\n\tcontrol: Control<FieldValues>;\n\tgetValues: UseFormGetValues<FieldValues>;\n\tsetValue: UseFormSetValue<FieldValues>;\n\terrors: DeepMap<FieldValues, FieldError>;\n\tvalidation: boolean;\n}\n\nconst StepTwo: React.FC<FuncProps> = ({\n\tregister,\n\tcontrol,\n\tgetValues,\n\terrors,\n\tsetValue,\n\tvalidation,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<TextField\n\t\t\t\tkey={'vehicleOperation'}\n\t\t\t\terror={errors.vehicleOperation}\n\t\t\t\thelperText={\n\t\t\t\t\terrors.vehicleOperation\n\t\t\t\t\t\t? 'This field is required(provide an number form 1 to 1000000)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\tdefaultValue={getValues('vehicleOperation')}\n\t\t\t\t{...register('vehicleOperation', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tpattern: /^[0-9]*$/i,\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: 1000000,\n\t\t\t\t})}\n\t\t\t\tlabel='Vehicle operation(km)'\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('vehicleOperation', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<Controller\n\t\t\t\tname='fuelType'\n\t\t\t\tcontrol={control}\n\t\t\t\trules={{ required: true }}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel='Type of fuel'\n\t\t\t\t\t\tdefaultValue={getValues('fuelType')}\n\t\t\t\t\t\terror={errors.fuelType}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\terrors.fuelType ? 'This field is required' : ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselect\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'Fuel type',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<MenuItem value={'disel'}>Disel</MenuItem>\n\t\t\t\t\t\t<MenuItem value={'petrol'}>Petrol</MenuItem>\n\t\t\t\t\t\t<MenuItem value={'petrol+gas'}>Petrol+gas</MenuItem>\n\t\t\t\t\t</TextField>\n\t\t\t\t)}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname='gearbox'\n\t\t\t\tcontrol={control}\n\t\t\t\trules={{ required: true }}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tselect\n\t\t\t\t\t\terror={errors.gearbox}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\terrors.gearbox ? 'This field is required' : ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefaultValue={getValues('gearbox')}\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\tlabel='Gearbox'\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'Fuel type',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<MenuItem key={'manual'} value={'manual'}>\n\t\t\t\t\t\t\tManual\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem value={'automat'} key={'automat'}>\n\t\t\t\t\t\t\tAutomatic\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</TextField>\n\t\t\t\t)}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tkey={'cubicCapacity'}\n\t\t\t\tlabel='Cubic capacity (cm3)'\n\t\t\t\terror={errors.cubicCapacity}\n\t\t\t\thelperText={\n\t\t\t\t\terrors.cubicCapacity\n\t\t\t\t\t\t? 'This field is required(provide an number from 500 to 10000)'\n\t\t\t\t\t\t: ''\n\t\t\t\t}\n\t\t\t\tdefaultValue={getValues('cubicCapacity')}\n\t\t\t\t{...register('cubicCapacity', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tpattern: /^[0-9]*$/i,\n\t\t\t\t\tmin: 500,\n\t\t\t\t\tmax: 10000,\n\t\t\t\t})}\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('cubicCapacity', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default StepTwo;\n","import React, { useState } from 'react';\ntype colors = {\n\tcolors: {\n\t\tprimary: string;\n\t\tsecondary: string;\n\t};\n\tchangeColors: (color: string, which: string) => void;\n};\n\nexport const ColorsContext = React.createContext<colors>({} as colors);\n\nexport const ColorsProvider: React.FC = ({ children }) => {\n\tconst [colors, setColors] = useState({\n\t\tprimary: localStorage.getItem('primary') || '#F47373',\n\t\tsecondary: localStorage.getItem('secondary') || '#ba68c8',\n\t});\n\tconst changeColors = (color: string, which: string) => {\n\t\tif (which === 'primary') {\n\t\t\tlocalStorage.setItem('primary', color);\n\t\t\tsetColors({ ...colors, primary: color });\n\t\t} else if (which === 'secondary') {\n\t\t\tlocalStorage.setItem('secondary', color);\n\t\t\tsetColors({ ...colors, secondary: color });\n\t\t}\n\t};\n\n\treturn (\n\t\t<ColorsContext.Provider value={{ colors, changeColors }}>\n\t\t\t{children}\n\t\t</ColorsContext.Provider>\n\t);\n};\n","import React, { useState } from 'react';\ntype DarkMode = { darkMode: Boolean; toggleDarkMode: () => void };\n\nexport const ThemeContext = React.createContext<DarkMode>({} as DarkMode);\n\nexport const DarkModeProvider: React.FC = ({ children }) => {\n\tconst [darkMode, setDarkMode] = useState(\n\t\tJSON.parse(localStorage.getItem('darkMode') || 'false')\n\t);\n\tconst toggleDarkMode = () => {\n\t\tlocalStorage.setItem('darkMode', JSON.stringify(!darkMode));\n\t\tsetDarkMode((prevState: boolean) => !prevState);\n\t};\n\n\treturn (\n\t\t<ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n\t\t\t{children}\n\t\t</ThemeContext.Provider>\n\t);\n};\n","import React, { useContext } from 'react';\nimport {\n\tTextField,\n\tFormControlLabel,\n\tCheckbox,\n\tMenuItem,\n} from '@material-ui/core';\nimport { Controller } from 'react-hook-form';\nimport { ThemeContext } from '../../../Context/Context';\nimport {\n\tUseFormRegister,\n\tFieldValues,\n\tControl,\n\tUseFormGetValues,\n\tUseFormSetValue,\n\tDeepMap,\n\tFieldError,\n} from 'react-hook-form';\n\ninterface FuncProps {\n\tregister: UseFormRegister<FieldValues>;\n\tcontrol: Control<FieldValues>;\n\tgetValues: UseFormGetValues<FieldValues>;\n\tsetValue: UseFormSetValue<FieldValues>;\n\terrors: DeepMap<FieldValues, FieldError>;\n\tvalidation: boolean;\n}\n\nconst StepThree: React.FC<FuncProps> = ({\n\tregister,\n\tcontrol,\n\tgetValues,\n\terrors,\n\tsetValue,\n\tvalidation,\n}) => {\n\tconst { darkMode } = useContext(ThemeContext);\n\treturn (\n\t\t<>\n\t\t\t<Controller\n\t\t\t\tname='accidentFree'\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={getValues('accidentFree')}\n\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\tname='Accident-free'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: darkMode ? 'white' : 'black',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tAccident-free\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname='servicedASS'\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={getValues('servicedASS')}\n\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\tname='Serviced at an authorized service station'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: darkMode ? 'white' : 'black',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tServiced at an ASS\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname='condition'\n\t\t\t\tcontrol={control}\n\t\t\t\trules={{ required: true }}\n\t\t\t\trender={({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tselect\n\t\t\t\t\t\terror={errors.condition}\n\t\t\t\t\t\tdefaultValue={getValues('condition')}\n\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\terrors.condition\n\t\t\t\t\t\t\t\t? 'This field is required(please select a option)'\n\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\tlabel='condition'\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'Fuel type',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<MenuItem key={'new'} value={'new'}>\n\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem value={'used'} key={'used'}>\n\t\t\t\t\t\t\tUsed\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</TextField>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tkey={'color'}\n\t\t\t\tdefaultValue={getValues('color')}\n\t\t\t\terror={errors.color}\n\t\t\t\tlabel='Color'\n\t\t\t\t{...register('color', {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 1,\n\t\t\t\t\tmaxLength: 20,\n\t\t\t\t})}\n\t\t\t\thelperText={errors.color ? 'This field is required' : ''}\n\t\t\t\tonChange={(event) =>\n\t\t\t\t\tsetValue('color', event.target.value, {\n\t\t\t\t\t\tshouldValidate: validation,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default StepThree;\n","import React, { useState, MouseEvent } from 'react';\nimport { Button, Snackbar } from '@material-ui/core';\nimport { Moment } from 'moment';\nimport { useForm } from 'react-hook-form';\nimport StepOne from '../Steps/StepOne';\nimport StepTwo from '../Steps/StepTwo';\nimport StepThree from '../Steps/StepThree';\n\ninterface data {\n\tbrand: string;\n\tmodel: string;\n\tproductionDate: Moment;\n\tvehicleOperation: number;\n\tfuelType: string;\n\tgearbox: string;\n\tcubicCapacity: number;\n\taccidentFree: boolean;\n\tservicedASS: boolean;\n\tcolor: string;\n\tcondition: string;\n}\n\nconst Multiform: React.FC = () => {\n\tconst [step, setStep] = useState(1);\n\tconst [open, setOpen] = useState(false);\n\tconst [message, setMessage] = useState('');\n\tconst [validation, setValidation] = useState(false);\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tcontrol,\n\t\tgetValues,\n\t\twatch,\n\t\tsetValue,\n\t\treset,\n\t\tformState: { errors },\n\t} = useForm();\n\n\tconst returnStep = () => {\n\t\tswitch (step) {\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<StepOne\n\t\t\t\t\t\tregister={register}\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tgetValues={getValues}\n\t\t\t\t\t\twatch={watch}\n\t\t\t\t\t\tsetValue={setValue}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tvalidation={validation}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<StepTwo\n\t\t\t\t\t\tregister={register}\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tgetValues={getValues}\n\t\t\t\t\t\tsetValue={setValue}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tvalidation={validation}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 3:\n\t\t\t\treturn (\n\t\t\t\t\t<StepThree\n\t\t\t\t\t\tregister={register}\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tgetValues={getValues}\n\t\t\t\t\t\tsetValue={setValue}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tvalidation={validation}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t}\n\t};\n\tconst changeStep = (event: MouseEvent, action?: String) => {\n\t\tevent.preventDefault();\n\t\tsetStep((prevStep) => (action === '+' ? ++prevStep : --prevStep));\n\t};\n\n\tconst saveData = (data: data) => {\n\t\tconst savedData = JSON.parse(localStorage.getItem('data') || '[]');\n\t\tlocalStorage.setItem('data', JSON.stringify([...savedData, data]));\n\t};\n\tconst onSubmit = (data: data) => {\n\t\tsetValidation(false);\n\t\tsetMessage('');\n\t\tsaveData(data);\n\t\treset();\n\t\tsetStep(1);\n\t\tsetOpen(true);\n\t};\n\tconst onError = () => {\n\t\tsetValidation(true);\n\t\tsetMessage('Please check all the fields to correct errors');\n\t};\n\n\tconst handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tclassName='form-container'\n\t\t\tonSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t<div className='fields-container'>{returnStep()}</div>\n\t\t\t<div className='button-container'>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={(event) => changeStep(event)}\n\t\t\t\t\tdisabled={step === 1 ? true : false}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='secondary'>\n\t\t\t\t\tBack\n\t\t\t\t</Button>\n\t\t\t\t{step !== 3 ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={(event) => changeStep(event, '+')}\n\t\t\t\t\t\tdisabled={step === 3 ? true : false}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t) : (\n\t\t\t\t\t<Button type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className='message'>{message}</div>\n\t\t\t<Snackbar\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmessage='Car added sucesfully'\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default Multiform;\n","import React, { useEffect } from 'react';\nimport Multiform from './components/Multiform/Multiform';\n\ninterface FuncProps {\n\tsetTitle(arg: string): void;\n}\n\nconst Home: React.FC<FuncProps> = ({ setTitle }) => {\n\tuseEffect(() => {\n\t\tsetTitle('Add Car');\n\t}, [setTitle]);\n\treturn <Multiform />;\n};\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport {\n\tAccordion,\n\tAccordionSummary,\n\tAccordionDetails,\n\tTheme,\n\tcreateStyles,\n\tmakeStyles,\n} from '@material-ui/core';\nimport moment, { Moment } from 'moment';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { ThemeContext } from '../../../Context/Context';\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\taccordion: {\n\t\t\tmarginBottom: '25px',\n\t\t\twidth: '100%',\n\t\t\tbackground: 'rgb(232, 232, 232)',\n\t\t},\n\t})\n);\n\ninterface FuncProps {\n\tcar: {\n\t\taccidentFree: boolean;\n\t\tbrand: string;\n\t\tcolor: string;\n\t\tcondition: string;\n\t\tcubicCapacity: number;\n\t\tfuelType: string;\n\t\tgearbox: string;\n\t\tmodel: string;\n\t\tproductionDate: Moment;\n\t\tservicedASS: boolean;\n\t\tvehicleOperation: number;\n\t};\n}\nconst CarInfo: React.FC<FuncProps> = ({ car }) => {\n\tconst { darkMode } = useContext(ThemeContext);\n\tconst classes = useStyles();\n\treturn (\n\t\t<Accordion elevation={3} className={classes.accordion}>\n\t\t\t<AccordionSummary\n\t\t\t\texpandIcon={<ExpandMoreIcon htmlColor='black' />}\n\t\t\t\taria-controls='panel1a-content'\n\t\t\t\tid='panel1a-header'>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`card-title ${\n\t\t\t\t\t\tdarkMode ? 'dark' : ''\n\t\t\t\t\t}`}>{`${car.brand} ${car.model}`}</div>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<div className={`card-information ${darkMode ? 'dark' : ''}`}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tPrduction Date:{' '}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{moment(car.productionDate).format('MMMM Do YYYY')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tVehicle operation: <span>{car.vehicleOperation}km</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tFuel type: <span>{car.fuelType}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tGearbox: <span>{car.gearbox}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tCubic capacity: <span>{car.cubicCapacity}cm3</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tAccident free:{' '}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{car.accidentFree ? (\n\t\t\t\t\t\t\t\t<CheckBoxIcon />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<CheckBoxOutlineBlankIcon />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tServiced at an authorized service station:{' '}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{car.servicedASS ? (\n\t\t\t\t\t\t\t\t<CheckBoxIcon />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<CheckBoxOutlineBlankIcon />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tCondition: <span>{car.condition}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tColor: <span>{car.color}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\nexport default CarInfo;\n","import React, { useEffect } from 'react';\nimport CarInfo from './components/CarInfo/CarInfo';\nimport { Moment } from 'moment';\n\ninterface data {\n\tbrand: string;\n\tmodel: string;\n\tproductionDate: Moment;\n\tvehicleOperation: number;\n\tfuelType: string;\n\tgearbox: string;\n\tcubicCapacity: number;\n\taccidentFree: boolean;\n\tservicedASS: boolean;\n\tcolor: string;\n\tcondition: string;\n}\n\ninterface FuncProps {\n\tsetTitle(arg: string): void;\n\tfetchedData: data[];\n\tsearch: string;\n\tsetSearch(arg: string): void;\n}\n\nconst Feed: React.FC<FuncProps> = ({\n\tsetTitle,\n\tfetchedData,\n\tsearch,\n\tsetSearch,\n}) => {\n\tuseEffect(() => {\n\t\tsetTitle('Collection');\n\t\tsetSearch('');\n\t}, [setTitle, setSearch]);\n\n\tconst filterData = () => {\n\t\treturn (\n\t\t\tfetchedData\n\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t.filter((car: data) => {\n\t\t\t\t\tif (search === '') {\n\t\t\t\t\t\treturn car;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcar.brand\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(search.toLowerCase()) ||\n\t\t\t\t\t\tcar.model\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(search.toLowerCase()) ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tcar.brand.replace(/\\s/g, '') +\n\t\t\t\t\t\t\tcar.model.replace(/\\s/g, '')\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(search.toLowerCase()) ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tcar.model.replace(/\\s/g, '') +\n\t\t\t\t\t\t\tcar.brand.replace(/\\s/g, '')\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(search.toLowerCase().replace(/\\s/g, ''))\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn car;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className='cards-container'>\n\t\t\t{filterData().map((car: data) => {\n\t\t\t\treturn <CarInfo car={car} />;\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default Feed;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './SidebarContent.scss';\nimport { Popover, Paper, Button } from '@material-ui/core';\nimport { BlockPicker } from 'react-color';\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ThemeContext, ColorsContext } from '../Context/Context';\n\nconst SidebarContent: React.FC = () => {\n\tconst { changeColors } = useContext(ColorsContext);\n\tconst [color, setColor] = useState('#F47373');\n\tconst [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null);\n\tconst { darkMode, toggleDarkMode } = useContext(ThemeContext);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst open = Boolean(anchorEl);\n\n\treturn (\n\t\t<div className='sidebar-container'>\n\t\t\t<Link className={`sidebar-link ${darkMode ? 'dark' : ''}`} to='/'>\n\t\t\t\t<div className='text'>Add Car</div>\n\t\t\t\t<AddIcon className='icon' />\n\t\t\t</Link>\n\t\t\t<Link\n\t\t\t\tclassName={`sidebar-link ${darkMode ? 'dark' : ''}`}\n\t\t\t\tto='/feed'>\n\t\t\t\t<div className='text'>Collection</div>\n\t\t\t\t<FormatListBulletedIcon className='icon' />\n\t\t\t</Link>\n\t\t\t<div\n\t\t\t\trole='button'\n\t\t\t\tonClick={toggleDarkMode}\n\t\t\t\tclassName={`sidebar-link ${darkMode ? 'dark' : ''}`}>\n\t\t\t\t{darkMode ? <BrightnessHighIcon /> : <Brightness4Icon />}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tonClick={(event) => handleClick(event)}\n\t\t\t\tclassName={`sidebar-link ${darkMode ? 'dark' : ''}`}>\n\t\t\t\t<PaletteIcon />\n\t\t\t</div>\n\t\t\t<Popover\n\t\t\t\topen={open}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\thorizontal: 'center',\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'center',\n\t\t\t\t}}>\n\t\t\t\t<Paper className='color-picker'>\n\t\t\t\t\t<BlockPicker\n\t\t\t\t\t\tonChange={(color) => setColor(color.hex)}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\twidth={'200px'}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='set-color-buttons'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tonClick={() => changeColors(color, 'secondary')}>\n\t\t\t\t\t\t\tSet Secondary\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tonClick={() => changeColors(color, 'primary')}>\n\t\t\t\t\t\t\tSet primary\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Paper>\n\t\t\t</Popover>\n\t\t</div>\n\t);\n};\nexport default SidebarContent;\n","import React, { useState, useContext } from 'react';\nimport { HashRouter as BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from '../Home/Home';\nimport Feed from '../Feed/Feed';\nimport SidebarContent from '../SidebarContent/SidebarContent';\nimport { ThemeContext } from '../Context/Context';\n\nconst Router: React.FC = () => {\n\tconst fetchedData = JSON.parse(localStorage.getItem('data') || '[]');\n\tconst [title, setTitle] = useState('Add Car');\n\tconst [text, setText] = useState('');\n\tconst { darkMode } = useContext(ThemeContext);\n\n\tconst filterData = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetText(event.target.value.trim().replace(/\\s/g, ''));\n\t};\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className='container'>\n\t\t\t\t<div className={`sidebar ${darkMode ? 'dark' : ''}`}>\n\t\t\t\t\t<SidebarContent />\n\t\t\t\t</div>\n\t\t\t\t<div className={`title-content-container `}>\n\t\t\t\t\t<div className={`title ${darkMode ? 'dark' : ''}`}>\n\t\t\t\t\t\t{title === 'Collection' ? (\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tplaceholder='Search'\n\t\t\t\t\t\t\t\tclassName={`search ${darkMode ? 'dark' : ''}`}\n\t\t\t\t\t\t\t\tonChange={(event) => filterData(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`content ${darkMode ? 'dark' : ''}`}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t\t<Home setTitle={setTitle} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path='/feed'>\n\t\t\t\t\t\t\t\t<Feed\n\t\t\t\t\t\t\t\t\tfetchedData={fetchedData}\n\t\t\t\t\t\t\t\t\tsearch={text}\n\t\t\t\t\t\t\t\t\tsetSearch={setText}\n\t\t\t\t\t\t\t\t\tsetTitle={setTitle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default Router;\n","import React, { useContext } from 'react';\nimport Router from './components/Router/Router';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport './scss/styles.scss';\nimport { ThemeContext, ColorsContext } from './components/Context/Context';\n\nconst App = () => {\n\tconst { darkMode } = useContext(ThemeContext);\n\tconst { colors } = useContext(ColorsContext);\n\tconst appliedTheme = createMuiTheme({\n\t\tpalette: {\n\t\t\ttype: darkMode ? 'dark' : 'light',\n\t\t\tprimary: {\n\t\t\t\tmain: colors.primary,\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\tmain: colors.secondary,\n\t\t\t},\n\t\t},\n\t});\n\treturn (\n\t\t<ThemeProvider theme={appliedTheme}>\n\t\t\t<div className='App'>\n\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\n\t\t\t\t\t<Router />\n\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t</div>\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\nimport { DarkModeProvider, ColorsProvider } from './components/Context/Context';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<DarkModeProvider>\n\t\t\t<ColorsProvider>\n\t\t\t\t<App />\n\t\t\t</ColorsProvider>\n\t\t</DarkModeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}